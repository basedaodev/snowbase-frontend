import { Networks } from "./blockchain";

const BASE_MAINNET = {
    DAO_ADDRESS: "0x4B5CF868dd973Ec4fCc251803De1d74771A092f2",
    SB_ADDRESS: "0x7961D6e1Fa299bA93EC9A8A50DAE253d69292b89",
    SSB_ADDRESS: "0x1D3e41eA025F130A550BEDcB053B7947E95bC761",
    WSSB_ADDRESS: "0xBaBA54d2C312250F9d6538Bd38703c8493d7438c",
    STAKING_ADDRESS: "0x44940275A814f55F7A9e05e772F26F4A3F563544",
    STAKING_HELPER_ADDRESS: "0x421927caE4EDAC4364a24EFBA6A252eF5b70f209",
    SB_BONDING_CALC_ADDRESS: "0xf28f0a41fe5Cb038fa3DD5bE71994FFc5123fA55",
    TREASURY_ADDRESS: "0xA7231Fb248F26f2C1B29F371F6bFc8641Dd28b85",
    ZAPIN_ADDRESS: "",
    REDEEM_ADDRESS: "",
    MIM_ADDRESS: "0x4A3A6Dd60A34bB2Aba60D73B4C88315E9CeB6A3D",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.BASE) return BASE_MAINNET;

    throw Error("Network not supported");
};
